( define ( problem problem_1 )
( :domain mmdomainextended )
( :objects
	robot0 robot1 robot2 robot3 - robot
	cpbase cpsite1 pp1 pp2 sp1 sp2 - pointofinterest
	base site1 - site
)
( :init
	( at robot0 cpbase )
	( at_site robot0 base )
	( groundconf robot0 )
	( available robot0 )
	( canswitch robot0 )
	( canrelay robot0 )
	( cansample robot0 )
	( at robot1 cpbase )
	( at_site robot1 base )
	( groundconf robot1 )
	( available robot1 )
	( canswitch robot1 )
	( canrelay robot1 )
	( cansample robot1 )
	( at robot2 cpbase )
	( at_site robot2 base )
	( groundconf robot2 )
	( available robot2 )
	( canswitch robot2 )
	( canrelay robot2 )
	( cansample robot2 )
	( at robot3 cpbase )
	( at_site robot3 base )
	( groundconf robot3 )
	( available robot3 )
	( canswitch robot3 )
	( canrelay robot3 )
	( cansample robot3 )
	( transition_poi cpbase )
	( ground cpbase )
	( air cpbase )
	( partofsite cpbase base )
	( survey_poi cpsite1 )
	( air cpsite1 )
	( partofsite cpsite1 site1 )
	( sample_poi pp1 )
	( water pp1 )
	( partofsite pp1 site1 )
	( sample_poi pp2 )
	( water pp2 )
	( partofsite pp2 site1 )
	( transition_poi sp1 )
	( water sp1 )
	( air sp1 )
	( partofsite sp1 site1 )
	( isswitchable sp1 )
	( isrelay sp1 )
	( transition_poi sp2 )
	( water sp2 )
	( air sp2 )
	( partofsite sp2 site1 )
	( isswitchable sp2 )
	( isrelay sp2 )
	( = ( speedair robot0 ) 1.5000000000 )
	( = ( speedwater robot0 ) 0.5000000000 )
	( = ( energy robot0 ) 1000000000.0000000000 )
	( = ( recharge_rate robot0 ) 10.0000000000 )
	( = ( assesscost robot0 ) 0.0200000000 )
	( = ( partassesscost robot0 ) 0.0100000000 )
	( = ( observecost robot0 ) 0.0100000000 )
	( = ( maintainconsumption_water robot0 ) 0.0200000000 )
	( = ( maintainconsumption_air robot0 ) 0.0800000000 )
	( = ( navconsumption_water robot0 ) 0.5000000000 )
	( = ( navconsumption_air robot0 ) 0.8000000000 )
	( = ( switchduration_airwater robot0 ) 5.0000000000 )
	( = ( switchcost_airwater robot0 ) 20.0000000000 )
	( = ( takeoffduration_groundair robot0 ) 4.0000000000 )
	( = ( takeoffost_groundair robot0 ) 10.0000000000 )
	( = ( landingduration_airground robot0 ) 3.0000000000 )
	( = ( landingcost_airground robot0 ) 5.0000000000 )
	( = ( switchduration_waterair robot0 ) 8.0000000000 )
	( = ( switchcost_waterair robot0 ) 30.0000000000 )
	( = ( speedair robot1 ) 1.5000000000 )
	( = ( speedwater robot1 ) 0.5000000000 )
	( = ( energy robot1 ) 1000000000.0000000000 )
	( = ( recharge_rate robot1 ) 10.0000000000 )
	( = ( assesscost robot1 ) 0.0200000000 )
	( = ( partassesscost robot1 ) 0.0100000000 )
	( = ( observecost robot1 ) 0.0100000000 )
	( = ( maintainconsumption_water robot1 ) 0.0200000000 )
	( = ( maintainconsumption_air robot1 ) 0.0800000000 )
	( = ( navconsumption_water robot1 ) 0.5000000000 )
	( = ( navconsumption_air robot1 ) 0.8000000000 )
	( = ( switchduration_airwater robot1 ) 5.0000000000 )
	( = ( switchcost_airwater robot1 ) 20.0000000000 )
	( = ( takeoffduration_groundair robot1 ) 4.0000000000 )
	( = ( takeoffost_groundair robot1 ) 10.0000000000 )
	( = ( landingduration_airground robot1 ) 3.0000000000 )
	( = ( landingcost_airground robot1 ) 5.0000000000 )
	( = ( switchduration_waterair robot1 ) 8.0000000000 )
	( = ( switchcost_waterair robot1 ) 30.0000000000 )
	( = ( speedair robot2 ) 1.5000000000 )
	( = ( speedwater robot2 ) 0.5000000000 )
	( = ( energy robot2 ) 1000000000.0000000000 )
	( = ( recharge_rate robot2 ) 10.0000000000 )
	( = ( assesscost robot2 ) 0.0200000000 )
	( = ( partassesscost robot2 ) 0.0100000000 )
	( = ( observecost robot2 ) 0.0100000000 )
	( = ( maintainconsumption_water robot2 ) 0.0200000000 )
	( = ( maintainconsumption_air robot2 ) 0.0800000000 )
	( = ( navconsumption_water robot2 ) 0.5000000000 )
	( = ( navconsumption_air robot2 ) 0.8000000000 )
	( = ( switchduration_airwater robot2 ) 5.0000000000 )
	( = ( switchcost_airwater robot2 ) 20.0000000000 )
	( = ( takeoffduration_groundair robot2 ) 4.0000000000 )
	( = ( takeoffost_groundair robot2 ) 10.0000000000 )
	( = ( landingduration_airground robot2 ) 3.0000000000 )
	( = ( landingcost_airground robot2 ) 5.0000000000 )
	( = ( switchduration_waterair robot2 ) 8.0000000000 )
	( = ( switchcost_waterair robot2 ) 30.0000000000 )
	( = ( speedair robot3 ) 1.5000000000 )
	( = ( speedwater robot3 ) 0.5000000000 )
	( = ( energy robot3 ) 1000000000.0000000000 )
	( = ( recharge_rate robot3 ) 10.0000000000 )
	( = ( assesscost robot3 ) 0.0200000000 )
	( = ( partassesscost robot3 ) 0.0100000000 )
	( = ( observecost robot3 ) 0.0100000000 )
	( = ( maintainconsumption_water robot3 ) 0.0200000000 )
	( = ( maintainconsumption_air robot3 ) 0.0800000000 )
	( = ( navconsumption_water robot3 ) 0.5000000000 )
	( = ( navconsumption_air robot3 ) 0.8000000000 )
	( = ( switchduration_airwater robot3 ) 5.0000000000 )
	( = ( switchcost_airwater robot3 ) 20.0000000000 )
	( = ( takeoffduration_groundair robot3 ) 4.0000000000 )
	( = ( takeoffost_groundair robot3 ) 10.0000000000 )
	( = ( landingduration_airground robot3 ) 3.0000000000 )
	( = ( landingcost_airground robot3 ) 5.0000000000 )
	( = ( switchduration_waterair robot3 ) 8.0000000000 )
	( = ( switchcost_waterair robot3 ) 30.0000000000 )
	( = ( site_size base ) 10.0000000000 )
	( = ( distance cpbase cpsite1 ) 89.0800000000 )
	( = ( distance cpbase sp1 ) 88.1000000000 )
	( = ( distance cpbase sp2 ) 94.6300000000 )
	( = ( site_size site1 ) 20.0000000000 )
	( = ( distance cpsite1 cpbase ) 89.0800000000 )
	( = ( distance cpsite1 sp1 ) 5.9700000000 )
	( = ( distance cpsite1 sp2 ) 5.8000000000 )
	( = ( distance pp1 pp2 ) 18.5400000000 )
	( = ( distance pp1 sp1 ) 10.9200000000 )
	( = ( distance pp1 sp2 ) 15.2600000000 )
	( = ( distance pp2 pp1 ) 18.5400000000 )
	( = ( distance pp2 sp1 ) 11.0700000000 )
	( = ( distance pp2 sp2 ) 4.7500000000 )
	( = ( distance sp1 cpbase ) 88.1000000000 )
	( = ( distance sp1 cpsite1 ) 5.9700000000 )
	( = ( distance sp1 pp1 ) 10.9200000000 )
	( = ( distance sp1 pp2 ) 11.0700000000 )
	( = ( distance sp1 sp2 ) 9.8000000000 )
	( = ( distance sp2 cpbase ) 94.6300000000 )
	( = ( distance sp2 cpsite1 ) 5.8000000000 )
	( = ( distance sp2 pp1 ) 15.2600000000 )
	( = ( distance sp2 pp2 ) 4.7500000000 )
	( = ( distance sp2 sp1 ) 9.8000000000 )
)
( :goal
	( and
		( sampled pp1 )
		( sampled pp2 )
	))
)
